# Copyright 2019 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and Deploy to Cloud Run

on:
    push:
        branches:
            - main

# Environment variables available to all jobs and steps in this workflow
env:
    PROJECT_ID: ${{ secrets.PROJECT_ID }}
    RUN_REGION: us-central1
    SERVICE_NAME: super-simple-service2

jobs:
    setup-build-deploy:
        name: Setup, Build, and Deploy
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v1

            # Setup gcloud CLI
            - name: Setup Cloud SDK
              uses: google-github-actions/setup-gcloud@v0.2.0
              with:
                project_id: ${{ env.PROJECT_ID }}
                service_account_key: ${{ secrets.GCP_SA_KEY }}
                  

            # Configure gcloud CLI
            - name: gcloud Set up
              run: |
                  gcloud config set project $PROJECT_ID
            # Build and push image to Google Container Registry
            - name: Build
              run: |
                  gcloud builds submit -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
            # Deploy image to Cloud Run
            - name: Deploy to Cloud Run
              id: deploy
              uses: google-github-actions/deploy-cloudrun@main
              with:
                service: test1 
                image: gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SH
                credentials: ${{ secrets.GCP_SA_KEY }}

            - name: Use Output
              run: curl "${{ steps.deploy.outputs.url }}"
